{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SessionService {\n  constructor(http) {\n    this.http = http;\n  }\n  addSession(model) {\n    return this.http.post('https://localhost:7186/api/Login', model);\n  }\n  static #_ = this.ɵfac = function SessionService_Factory(t) {\n    return new (t || SessionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionService,\n    factory: SessionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SessionService","constructor","http","addSession","model","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\walte\\Desktop\\MASTER\\PISTL\\DAT_project\\UI\\datproject\\src\\app\\features\\session\\services\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddSessionRequest } from '../models/add-session-request-model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  constructor(private http: HttpClient) { }\n\n  addSession(model: AddSessionRequest): Observable<void> {\n    return this.http.post<void>('https://localhost:7186/api/Login', model);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAUA,CAACC,KAAwB;IACjC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,kCAAkC,EAAED,KAAK,CAAC;EACxE;EAAC,QAAAE,CAAA,G;qBANUN,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdX,cAAc;IAAAY,OAAA,EAAdZ,cAAc,CAAAa,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}